DROP TABLE participantview;
CREATE VIEW participantview AS SELECT person.id, participation.id AS participationId, (CASE WHEN reviewer.id <> 0 THEN true ELSE false END) as reviewer, identityobject.name, person.firstname, person.lastname, person.title, person.gender, address.street, address.zipCode, address.city, country.isoCode as country, (select fullName from address where address.id = person.billaddress_id) as billFullname, (select institute from address where address.id = person.billaddress_id) as billInstitute, (select street from address where address.id = person.billaddress_id) as billStreet, (select zipCode from address where address.id = person.billaddress_id) as billZipCode, (select city from address where address.id = person.billaddress_id) as billCity, (select isoCode from address left join country on address.country_id = country.id where address.id = person.billaddress_id) as billCountry, contact.email, contact.phone, contact.fax, occupation.department, occupation.institute, occupation.position, participation.participating, participation.vipstatus AS vipStatus, participation.regdate, (SELECT count(paper.id) FROM public.paper WHERE paper.person_id = person.id) AS abstractsCreated, (SELECT count(paper.id) FROM public.paper WHERE paper.person_id = person.id AND (paper.status = 1 OR paper.status = 2)) AS abstractsSubmitted, person.imported, additionalparticipation.status_id AS participationStatusId, additionalparticipation.workshop1 AS workshop1, additionalparticipation.workshop2 AS workshop2, additionalparticipation.workshop3 AS workshop3, additionalparticipation.eveningEventTickets AS eveningEventTickets, additionalparticipation.present AS present, additionalparticipation.exhibitor AS exhibitor, additionalparticipation.speaker AS speaker,(CASE WHEN ((select count(id) from public.transaction where person_id = person.id and transaction.sum > 0 and (transaction.status = 1 or transaction.status = 2 or transaction.status = 5)) = 0 and (select count(id) from transaction where person_id = person.id and transaction.sum > 0 and transaction.status = 0) > 0) or ((select count(id) from public.transaction where person_id = person.id and transaction.sum = 0) > 0 and (select count(id) from public.transaction where person_id = person.id and transaction.sum > 0 and (transaction.status = 1 or transaction.status = 2 or transaction.status = 5)) = 0) THEN true ELSE false END) as paid, (select sum(sum) from public.transaction where person_id = person.id and transaction.sum > 0 and (transaction.status = 0 or transaction.status = 1 or transaction.status = 2 or transaction.status = 5)) as price FROM public.participation LEFT JOIN public.additionalparticipation ON participation.id = additionalparticipation.participation_id, public.identityobject, public.person LEFT JOIN public.reviewer ON person.id = reviewer.person_id, public.address LEFT JOIN public.country ON address.country_id = country.id, public.contact, public.occupation GROUP BY person.id, participation.id, identityobject.name, person.firstname,  person.lastname,person.title, person.gender, address.street, address.zipCode, address.city, contact.phone, contact.fax, occupation.department, occupation.institute, occupation.position, participation.vipstatus, participation.participating, participation.regdate, participation.person_id, identityobject.id, person.identity_id, address.id, country.id, country.isoCode, contact.id, occupation.id, reviewer.id, person.imported, additionalparticipation.status_id, additionalparticipation.workshop1, additionalparticipation.workshop2, additionalparticipation.workshop3, additionalparticipation.eveningEventTickets, additionalparticipation.speaker, additionalparticipation.exhibitor, additionalparticipation.present HAVING participation.person_id = person.id AND identityobject.id = person.identity_id AND person.address_id = address.id AND person.occupation_id = occupation.id AND person.contact_id = contact.id;
DROP TABLE paperview;
CREATE VIEW paperview AS SELECT paper.id, paper.sequenceNumber, paper.submissionDate, (SELECT author.firstname FROM public.author WHERE author.paper_id = paper.id ORDER BY author.number ASC LIMIT 1 OFFSET 0) AS firstname, (SELECT author.lastname FROM public.author WHERE author.paper_id = paper.id ORDER BY author.number ASC LIMIT 1 OFFSET 0) AS lastname, (SELECT author.firstname FROM public.author WHERE author.paper_id = paper.id and author.presenter = TRUE) AS firstnamePresenter, (SELECT author.lastname FROM public.author WHERE author.paper_id = paper.id and author.presenter = TRUE) AS lastnamePresenter, person.firstname AS firstnameSubmitter, person.lastname AS lastnameSubmitter, (CASE WHEN paper.session_id <> 0 THEN paper.session_id ELSE -1 END) AS session, paper.topic, (CASE WHEN paper.status = 2 THEN true ELSE false END) AS keynoteSpeaker,paper.submissionType, (CASE WHEN attachment.id <> 0 THEN true ELSE false END) AS picture, array_upper(regexp_split_to_array(paper.body, E'\\s+'),1) as words FROM public.paper LEFT JOIN public.attachment ON attachment.paper_id = paper.id, public.person GROUP BY paper.id, paper.sequenceNumber, paper.submissionDate, paper.topic, person.id, person.lastname, person.firstname, paper.session_id, paper.topic, paper.submissionType, attachment.id HAVING person.id = paper.person_id AND (paper.status = 1 OR paper.status = 2);
DROP TABLE paymentview;
CREATE VIEW paymentview AS select person.id, person.firstname, person.lastname, (select count(id) from transaction where person_id = person.id and transaction.sum > 0) as transactions, (CASE WHEN (select count(id) from public.transaction where person_id = person.id and transaction.sum > 0 and transaction.status = 1) > 0 THEN true ELSE false END) as pendingTransaction, (select count(id) from public.transaction where person_id = person.id and transaction.sum > 0 and (transaction.status = 1 or transaction.status = 2 or transaction.status = 5)) as openTransactions, (select sum(sum) from public.transaction where person_id = person.id and transaction.sum > 0 and (transaction.status = 0 or transaction.status = 1 or transaction.status = 2 or transaction.status = 5)) as sumOfTransactions, (CASE WHEN ((select count(id) from public.transaction where person_id = person.id and transaction.sum > 0 and (transaction.status = 1 or transaction.status = 2 or transaction.status = 5)) = 0 and (select count(id) from transaction where person_id = person.id and transaction.sum > 0 and transaction.status = 0) > 0) or ((select count(id) from public.transaction where person_id = person.id and transaction.sum = 0) > 0 and (select count(id) from public.transaction where person_id = person.id and transaction.sum > 0 and (transaction.status = 1 or transaction.status = 2 or transaction.status = 5)) = 0) THEN true ELSE false END) as paid from public.person;
